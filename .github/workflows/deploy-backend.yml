name: Deploy Backend

on:
  push:
    branches:
      - backend

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}

      - name: Build and push backend Doc  ker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Add EC2 SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Create .env
        run: |
          echo "ENV=production" >> .env
          echo "DEBUG=False" >> .env
          echo "POSTGRES_DB=${{ secrets.DB_NAME }}" >> .env
          echo "POSTGRES_USER=${{ secrets.DB_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.DB_PASS }}" >> .env
          echo "DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASS }}@db:5432/${{ secrets.DB_NAME }}" >> .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env

      - name: Upload .env on EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa .env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/appbucket/backend/.env

      - name: Upload backend folder to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r ./backend/Dockerfile ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/appbucket/backend/Dockerfile

      - name: SSH into EC2 and restart Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/appbucket/infra
            docker compose pull
            docker compose down
            docker compose up -d --build
          EOF
