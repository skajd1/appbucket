name: Deploy Infra

on:
  push:
    branches:
      - infra

jobs:
  deploy-infra:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Add EC2 SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Create .envfile
        run: |
          echo "ENV=production" >> .env
          echo "DEBUG=False" >> .env
          echo "POSTGRES_DB=${{ secrets.DB_NAME }}" >> .env
          echo "POSTGRES_USER=${{ secrets.DB_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.DB_PASS }}" >> .env
          echo "DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASS }}@db:5432/${{ secrets.DB_NAME }}" >> .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env

      - name: Upload .env on EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa .env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/appbucket/infra/.env

      - name: Upload docker-compose.yml on EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa infra/docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/appbucket/infra/docker-compose.yml

      - name: SSH into EC2 and restart Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/appbucket/infra
            docker compose down
            docker compose up -d --build
          EOF
